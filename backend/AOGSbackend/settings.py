"""
Django settings for AOGSbackend project.

Generated by 'django-admin startproject' using Django 2.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

from django.utils.http import *
from dotenv import load_dotenv

from AOGSbackend.utils.url_tools import url_join, set_params

load_dotenv()
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Discord
# + Secret
CLIENT_ID = os.getenv('CLIENT_ID')
CLIENT_SECRET = os.getenv('CLIENT_SECRET')
BOT_TOKEN = os.getenv('BOT_TOKEN')
GUILD_ID = os.getenv('GUILD_ID')
if CLIENT_ID is None or CLIENT_SECRET is None or BOT_TOKEN is None or GUILD_ID is None:
    raise Exception("Could not start, missing Discord environment variables.")
# - Secret
API_ENDPOINT = 'https://discordapp.com/api'
API_VERSION = '/v6'
REDIRECT_URI = 'https://api.tsf-albion.fr/auth/authorized/'
SCOPES = 'identify'
AUTHORIZE_URI = set_params(url_join(API_ENDPOINT, 'oauth2', 'authorize'), client_id=CLIENT_ID, redirect_uri=REDIRECT_URI, response_type='code', scope=SCOPES)
BOT_REDIRECT_URI = 'https://api.tsf-albion.fr/bot/authorized/'
PERMISSIONS = '247872'
BOT_AUTHORIZE_URI = set_params(url_join(API_ENDPOINT, 'oauth2', 'authorize'), client_id=CLIENT_ID, scope='bot', permissions=PERMISSIONS)

# Django secret
SECRET_KEY = os.getenv('DJANGO_SECRET')
if SECRET_KEY is None:
    raise Exception("Could not start, missing Django secrat key environment variables.")

# Debug
DEBUG = os.getenv('DEBUG') == 'True'

# Sessions
SESSION_COOKIE_SECURE = True
SESSION_COOKIE_SAMESITE = None
SESSION_COOKIE_AGE = 86400
SESSION_COOKIE_DOMAIN = 'api.tsf-albion.fr'
SESSION_COOKIE_NAME = 'aogs_session'
SESSION_COOKIE_HTTPONLY = True
SESSION_ENGINE = 'django.contrib.sessions.backends.signed_cookies'

# Security
ALLOWED_HOSTS = ['api.tsf-albion.fr']

# CSRF Unused
CSRF_USE_SESSIONS = False
CSRF_COOKIE_HTTPONLY = False
CSRF_COOKIE_DOMAIN = 'www.tsf-albion.fr'
CSRF_COOKIE_NAME = "csrftoken"
CSRF_COOKIE_SECURE = True


CORS_ORIGIN_WHITELIST = [
    "https://www.tsf-albion.fr"
]
CORS_ALLOW_CREDENTIALS = True

# Auth / Accounts
AUTH_USER_MODEL = 'AccountManagement.UserModel'
ADMIN_ENABLED = False
AUTHENTICATION_BACKENDS = ['AccountManagement.backends.UserBackend']

# Django settings
INSTALLED_APPS = [
    'corsheaders',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'AccountManagement.apps.AccountManagementConfig',
    'AlbionPlayer.apps.AlbionPlayerConfig'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'AOGSbackend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'AOGSbackend.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
CONN_MAX_AGE = 300
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT')
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# Should not be used
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# There is none
STATIC_URL = '/static/'
